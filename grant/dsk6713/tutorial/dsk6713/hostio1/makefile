#
#  Makefile for creation of the program named by the PROG variable
#
#  The following naming conventions are used by this makefile:
#	<prog>.asm	- C67 assembly language source file
#	<prog>.obj	- C67 object file (compiled/assembled source)
#	<prog>.out	- C67 executable (fully linked program)
#	<prog>cfg.s67	- configuration assembly source file generated
#			  by Configuration Tool
#	<prog>cfg.h67	- configuration assembly header file generated
#			  by Configuration Tool
#	<prog>cfg_c.c	- configuration assembly header file generated
#			  by Configuration Tool
#	<prog>cfg.h	- configuration assembly header file generated
#			  by Configuration Tool
#	<prog>cfg.cmd	- configuration linker command file generated
#			  by Configuration Tool
#

TI_DIR  := $(subst \,/,$(TI_DIR))
include $(TI_DIR)/c6000/bios/include/c67rules.mak

#
#  Compiler, assembler, and linker options.
#
# -g enable symbolic debugging
CC67OPTS = -g
AS67OPTS = 
LD67OPTS = -c -q	# -q quiet run

#  Every BIOS program must be linked with:
#	$(PROG)cfg.obj	- object resulting from assembling $(PROG)cfg.s67
#	$(PROG)cfg_c.obj- object resulting from compiling $(PROG)cfg_c.c
#	$(PROG)cfg.cmd	- linker command file generated by Config Tool. If
#			  additional liner command files exist, $(PROG)cfg.cmd
#			  must appear first.
#
PROG	= hostio
OBJS	= $(PROG)cfg.obj $(PROG)cfg.obj $(PROG)cfg_c.obj
LIBS	=
CMDS	= $(PROG)cfg.cmd

#
#  Targets:
#
all:: $(PROG).out

$(PROG).out: $(OBJS) $(CMDS)
$(PROG)cfg.obj: $(PROG)cfg.h67
$(PROG)cfg_c.obj: $(PROG)cfg_c.c
$(PROG).obj: $(PROG).c
$(PROG).c: $(PROG)cfg.h

$(PROG)cfg.s67 $(PROG)cfg.h67 $(PROG)cfg.h $(PROG)cfg_c.c $(PROG)cfg.cmd :: $(PROG).cdb
	$(TI_DIR)/plugins/bios/gconfgen $(PROG).cdb

.clean clean::
	@ echo removing generated configuration files ...
	@$(REMOVE) -f $(PROG)cfg.s67 $(PROG)cfg.h67 $(PROG)cfg.cmd
	@$(REMOVE) -f $(PROG)cfg_c.c $(PROG)cfg.h
	@ echo removing object files and binaries ...
	@$(REMOVE) -f *.obj *.out *.lst *.map

